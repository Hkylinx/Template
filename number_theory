#include<bits/stdc++.h>
using namespace std;
const int N=1e5+4;

inline int Ex_Gcd(int a,int b,int &x,int &y){
	if(!b)return x=1,y=0,a;int z,d=Ex_Gcd(b,a%b,x,y);
	z=y,y=x-a/b*y,x=z;	return d;
}


//ÇóÒ»ÔªÏßÐÔÍ¬Óà·½³Ì×é
int n,a[N],b[N];
inline int yyxxtyfcz(){
	int a1=a[1],b1=b[1],a2,b2,x,y,d,i=1,tp;
	for(;++i<=n;b1+=a1*x,a1*=a2){
		a2=a[i],b2=b[i],d=Ex_Gcd(a1,a2,x,y);
		if((tp=b2-b1)%d)return -1;
		y=a1/d,a2/=d,tp/=d,x=(tp*x%a2+a2)%a2;
	}
	return b1;
}
//Euler
LL Euler(LL x){
	if(x==1)return 1;	LL i=2,a=x;
	for(;i*i<=x;i++)if(!(x%i))
		for(a=a/i*(i-1);!(x%i);)x/=i;
	if(x>1)a=a/x*(x-1);	return a;
}

LL n,m,tot,ans,p[N],phi[N];	bool np[N];
void Phi(){
	for(LL i=2,j,k;i<N;i++){
		if(!np[i])p[++tot]=i,phi[i]=i-1;
		for(j=1;j<=tot&&i*p[j]<N;j++){
			np[k=i*p[j]]=1;
			if(i%p[j]==0){phi[k]=phi[i]*p[j];break;}
			phi[k]=phi[i]*(p[j]-1);
		}
		
	}
	
}



