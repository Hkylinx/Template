#include<cstdio>
#include<cmath>
#include<cstring>
#include<algorithm>
using namespace std;
const double PI=acos(-1.0);
const int N= 130;
struct cp{
	double r,i;
	cp (double _r=0.0,double _i=0.0) {r=_r,i=_i;}
	cp operator + (const cp &b){
		return cp(r+b.r,i+b.i);}
	cp operator - (const cp &b){
		return cp(r-b.r,i-b.i);}
	cp operator * (const cp &b){
		return cp(r*b.r-i*b.i,r*b.i+i*b.r);}
}x1[N],x2[N];
int ans[N],len1,len2,let,r[N],m; 
char st1[N>>1],st2[N>>1];
void FFT(cp x[],int len,int op){
	for(int i=0;i<len;i++) if(i<r[i])swap(x[i],x[r[i]]);
	for(int i=2;i<=len;i<<=1){
		cp wn(cos(-op*2*PI/i),sin(-op*2*PI/i));
		for(int j=0;j<len;j+=i){ cp w(1,0);
			for(int k=j;k<j+(i>>1);k++,w=w*wn){
				cp u=x[k],v=w*x[k+(i>>1)];
				x[k]=u+v,x[k+(i>>1)]=u-v;
			}
		}
	}
	if(op==-1) for(int i=0;i<len;i++) x[i].r/=len;
}
void init(){
	len1=strlen(st1), len2=strlen(st2);
	for(let=1,m=0;let<(len1<<1)||let<(len2<<1);let<<=1)m++;
	for(int i=0;i<let;i++)r[i]=(r[i>>1]>>1)|((i&1)<<(m-1));
	for(int i=0;i<len1;i++) x1[i]=cp(st1[len1-1-i]-'0',0);
	for(int i=0;i<len2;i++) x2[i]=cp(st2[len2-1-i]-'0',0);
	for(int i=len1;i<let;i++) x1[i]=cp(0,0);	
	for(int i=len2;i<let;i++) x2[i]=cp(0,0);
}
int main(){
	scanf("%s%s",st1,st2); init(); 
	FFT(x1,let,1); FFT(x2,let,1);
	for(int i=0;i<let;i++) x1[i]=x1[i]*x2[i];
	FFT(x1,let,-1);
	for(int i=0;i<let;i++) ans[i]=(int)(x1[i].r+0.1);
  for(int i=0;i<let;i++) if(ans[i]>9)ans[i+1]+=ans[i]/10,ans[i]%=10;
	for(let=len1+len2-1;ans[let]<=0&&let;let--);
	for(int i=let;~i;i--)printf("%d",ans[i]);
	return 0;
}
